#!/usr/bin/env ruby
# coding: utf-8

class Player
  def initialize
    @p = IO.popen("mpg123 -R dummytxt", "w+")
  end

  def load(file)
    @p.puts "LOAD #{file}"
  end

  def gets
    @p.gets
  end
end

def getch
  begin
    system("stty raw -echo")
    str = STDIN.getc
  ensure
    system("stty -raw echo")
  end
  return str
end

begin
  files = Dir.glob(ARGV[0]).sort_by { rand }
  raise if files.length == 0
rescue
  puts "Failed to load files."
  exit
end

$player       = Player.new
$ptr          = 0
$break        = false         # used to allow changing to the next song
$stop_signal  = "@P 0\n"

Thread.new do
  loop do
    { 
      'p' => lambda { $p.puts "PAUSE"          }, 
      'q' => lambda { $p.puts "QUIT"; exit     },
      '.' => lambda { $break = true            },
      ',' => lambda { $break = true; $ptr -= 2 }
    }[getch].call
  end
end

loop do
  $ptr = $ptr % files.length      # start over if we've finished the last song
  print "#{File.basename(files[$ptr], ".mp3")}\n\r"
  $player.load(files[$ptr])
  while $player.gets != $stop_signal
    # check whether the user has skipped this song
    ( $break = false; break ) if $break
  end
  $ptr += 1
end
